'use strict';

var _helpers = require('./helpers');

require('source-map-support').install();

describe('logger with force log', function () {
  var writers = undefined,
      log = undefined;
  before(function () {
    writers = (0, _helpers.setupWriters)();
    log = (0, _helpers.getDynamicLogger)(true, true);
    log.level = 'silly';
  });

  after(function () {
    (0, _helpers.restoreWriters)(writers);
  });

  it('should not rewrite log levels even during testing', function () {
    log.silly('silly');
    (0, _helpers.assertOutputContains)(writers, 'silly');
    log.verbose('verbose');
    (0, _helpers.assertOutputContains)(writers, 'verbose');
    log.verbose('debug');
    (0, _helpers.assertOutputContains)(writers, 'debug');
    log.info('info');
    (0, _helpers.assertOutputContains)(writers, 'info');
    log.http('http');
    (0, _helpers.assertOutputContains)(writers, 'http');
    log.warn('warn');
    (0, _helpers.assertOutputContains)(writers, 'warn');
    log.error('error');
    (0, _helpers.assertOutputContains)(writers, 'error');
    (function () {
      log.errorAndThrow('msg');
    }).should['throw']('msg');
    (0, _helpers.assertOutputContains)(writers, 'error');
    (0, _helpers.assertOutputContains)(writers, 'msg');
  });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvbG9nZ2VyLWZvcmNlLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O3VCQUdxQyxXQUFXOztBQUhoRCxPQUFPLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQzs7QUFLeEMsUUFBUSxDQUFDLHVCQUF1QixFQUFFLFlBQU07QUFDdEMsTUFBSSxPQUFPLFlBQUE7TUFBRSxHQUFHLFlBQUEsQ0FBQztBQUNqQixRQUFNLENBQUMsWUFBTTtBQUNYLFdBQU8sR0FBRyxhQU42QixZQUFZLEdBTTNCLENBQUM7QUFDekIsT0FBRyxHQUFHLGFBUEQsZ0JBQWdCLEVBT0UsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ25DLE9BQUcsQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDO0dBQ3JCLENBQUMsQ0FBQzs7QUFFSCxPQUFLLENBQUMsWUFBTTtBQUNWLGlCQVp1QixjQUFjLEVBWXRCLE9BQU8sQ0FBQyxDQUFDO0dBQ3pCLENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsbURBQW1ELEVBQUUsWUFBTTtBQUM1RCxPQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ25CLGlCQWhCSyxvQkFBb0IsRUFnQkosT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ3ZDLE9BQUcsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDdkIsaUJBbEJLLG9CQUFvQixFQWtCSixPQUFPLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDekMsT0FBRyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUNyQixpQkFwQkssb0JBQW9CLEVBb0JKLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztBQUN2QyxPQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ2pCLGlCQXRCSyxvQkFBb0IsRUFzQkosT0FBTyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0FBQ3RDLE9BQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDakIsaUJBeEJLLG9CQUFvQixFQXdCSixPQUFPLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDdEMsT0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNqQixpQkExQkssb0JBQW9CLEVBMEJKLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQztBQUN0QyxPQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ25CLGlCQTVCSyxvQkFBb0IsRUE0QkosT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ3ZDLEtBQUMsWUFBTTtBQUFFLFNBQUcsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7S0FBRSxDQUFBLENBQUUsTUFBTSxTQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDMUQsaUJBOUJLLG9CQUFvQixFQThCSixPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDdkMsaUJBL0JLLG9CQUFvQixFQStCSixPQUFPLEVBQUUsS0FBSyxDQUFDLENBQUM7R0FDdEMsQ0FBQyxDQUFDO0NBQ0osQ0FBQyxDQUFDIiwiZmlsZSI6InRlc3QvbG9nZ2VyLWZvcmNlLXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnc291cmNlLW1hcC1zdXBwb3J0JykuaW5zdGFsbCgpO1xuXG5pbXBvcnQgeyBnZXREeW5hbWljTG9nZ2VyLCByZXN0b3JlV3JpdGVycywgc2V0dXBXcml0ZXJzLFxuICAgICAgICAgYXNzZXJ0T3V0cHV0Q29udGFpbnMgfSBmcm9tICcuL2hlbHBlcnMnO1xuXG5kZXNjcmliZSgnbG9nZ2VyIHdpdGggZm9yY2UgbG9nJywgKCkgPT4ge1xuICBsZXQgd3JpdGVycywgbG9nO1xuICBiZWZvcmUoKCkgPT4ge1xuICAgIHdyaXRlcnMgPSBzZXR1cFdyaXRlcnMoKTtcbiAgICBsb2cgPSBnZXREeW5hbWljTG9nZ2VyKHRydWUsIHRydWUpO1xuICAgIGxvZy5sZXZlbCA9ICdzaWxseSc7XG4gIH0pO1xuXG4gIGFmdGVyKCgpID0+IHtcbiAgICByZXN0b3JlV3JpdGVycyh3cml0ZXJzKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBub3QgcmV3cml0ZSBsb2cgbGV2ZWxzIGV2ZW4gZHVyaW5nIHRlc3RpbmcnLCAoKSA9PiB7XG4gICAgbG9nLnNpbGx5KCdzaWxseScpO1xuICAgIGFzc2VydE91dHB1dENvbnRhaW5zKHdyaXRlcnMsICdzaWxseScpO1xuICAgIGxvZy52ZXJib3NlKCd2ZXJib3NlJyk7XG4gICAgYXNzZXJ0T3V0cHV0Q29udGFpbnMod3JpdGVycywgJ3ZlcmJvc2UnKTtcbiAgICBsb2cudmVyYm9zZSgnZGVidWcnKTtcbiAgICBhc3NlcnRPdXRwdXRDb250YWlucyh3cml0ZXJzLCAnZGVidWcnKTtcbiAgICBsb2cuaW5mbygnaW5mbycpO1xuICAgIGFzc2VydE91dHB1dENvbnRhaW5zKHdyaXRlcnMsICdpbmZvJyk7XG4gICAgbG9nLmh0dHAoJ2h0dHAnKTtcbiAgICBhc3NlcnRPdXRwdXRDb250YWlucyh3cml0ZXJzLCAnaHR0cCcpO1xuICAgIGxvZy53YXJuKCd3YXJuJyk7XG4gICAgYXNzZXJ0T3V0cHV0Q29udGFpbnMod3JpdGVycywgJ3dhcm4nKTtcbiAgICBsb2cuZXJyb3IoJ2Vycm9yJyk7XG4gICAgYXNzZXJ0T3V0cHV0Q29udGFpbnMod3JpdGVycywgJ2Vycm9yJyk7XG4gICAgKCgpID0+IHsgbG9nLmVycm9yQW5kVGhyb3coJ21zZycpOyB9KS5zaG91bGQudGhyb3coJ21zZycpO1xuICAgIGFzc2VydE91dHB1dENvbnRhaW5zKHdyaXRlcnMsICdlcnJvcicpO1xuICAgIGFzc2VydE91dHB1dENvbnRhaW5zKHdyaXRlcnMsICdtc2cnKTtcbiAgfSk7XG59KTtcbiJdfQ==